---
// Astro page to showcase the ProfileCard component
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Profile Card Demo</title>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900">
    <div class="min-h-screen py-12">
      <div class="container mx-auto px-4">
        <h1 class="text-4xl font-bold text-center mb-4 text-gray-900 dark:text-white">
          Profile Card Component
        </h1>
        <p class="text-center text-gray-600 dark:text-gray-300 mb-12 max-w-2xl mx-auto">
          A modern, customizable profile card component with multiple variants and sizes.
          Built with React, TailwindCSS, and TypeScript.
        </p>

        <div id="profile-cards-container"></div>

        <!-- Usage Documentation -->
        <div class="mt-16 max-w-6xl mx-auto">
          <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 border border-gray-200 dark:border-gray-700">
            <h2 class="text-2xl font-bold mb-6 text-gray-900 dark:text-white">
              Component Props
            </h2>

            <div class="grid md:grid-cols-2 gap-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 text-gray-800 dark:text-gray-200">Required Props</h3>
                <ul class="space-y-2 text-sm text-gray-600 dark:text-gray-300">
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">title: string</code> - The name/title to display</li>
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">description: string</code> - Bio or description text</li>
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">img: string</code> - Profile image URL</li>
                </ul>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 text-gray-800 dark:text-gray-200">Optional Props</h3>
                <ul class="space-y-2 text-sm text-gray-600 dark:text-gray-300">
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">kind?: "default" | "primary" | "secondary" | "success" | "warning"</code></li>
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">size?: "sm" | "default" | "lg"</code></li>
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">followers?: number</code> - Default: 312</li>
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">following?: number</code> - Default: 48</li>
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">verified?: boolean</code> - Default: true</li>
                  <li><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">onFollowClick?: () => void</code></li>
                </ul>
              </div>
            </div>

            <div class="mt-8">
              <h3 class="text-lg font-semibold mb-4 text-gray-800 dark:text-gray-200">Usage Example</h3>
              <div class="bg-gray-900 rounded-lg p-4 overflow-x-auto">
                <pre class="text-green-400 text-sm"><code>import { ProfileCard } from "../ui/profile-card"

function MyComponent() {
  return (
    &lt;ProfileCard
      title="Sophie Bennett"
      description="Product Designer who focuses on simplicity & usability."
      img="https://example.com/profile.jpg"
      kind="default"
      size="default"
      followers={312}
      following={48}
      verified={true}
      onFollowClick={() => console.log("Follow clicked!")}
    /&gt;
  )
}</code></pre>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      import { ProfileCard } from '../components/ui/profile-card.tsx';
      import React from 'react';
      import { createRoot } from 'react-dom/client';

      // Sample data matching the original design
      const profileData = [
        {
          title: "Sophie Bennett",
          description: "Product Designer who focuses on simplicity & usability.",
          img: "https://images.unsplash.com/photo-1494790108755-2616b612b786?w=400&h=400&fit=crop&crop=face",
          kind: "default",
          followers: 312,
          following: 48,
          verified: true
        },
        {
          title: "Alex Chen",
          description: "Frontend Developer passionate about creating beautiful user experiences.",
          img: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=400&fit=crop&crop=face",
          kind: "primary",
          followers: 1205,
          following: 89,
          verified: true
        },
        {
          title: "Maria Rodriguez",
          description: "Creative Director with 10+ years of experience in brand design.",
          img: "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=400&h=400&fit=crop&crop=face",
          kind: "secondary",
          followers: 2847,
          following: 156,
          verified: true
        },
        {
          title: "David Kim",
          description: "Full-stack engineer building scalable web applications.",
          img: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400&h=400&fit=crop&crop=face",
          kind: "success",
          followers: 756,
          following: 234,
          verified: false
        },
        {
          title: "Emily Johnson",
          description: "UX Researcher helping teams make data-driven design decisions.",
          img: "https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400&h=400&fit=crop&crop=face",
          kind: "warning",
          followers: 432,
          following: 67,
          verified: true
        },
        {
          title: "James Wilson",
          description: "Mobile app developer creating innovative solutions for modern problems.",
          img: "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400&h=400&fit=crop&crop=face",
          kind: "default",
          size: "sm",
          followers: 198,
          following: 45,
          verified: true
        }
      ];

      function ProfileCardGrid() {
        const handleFollowClick = (name) => {
          alert(`Following ${name}!`);
        };

        return React.createElement('div',
          { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto" },
          profileData.map((profile, index) =>
            React.createElement(ProfileCard, {
              key: index,
              ...profile,
              onFollowClick: () => handleFollowClick(profile.title)
            })
          )
        );
      }

      // Mount the React component
      const container = document.getElementById('profile-cards-container');
      if (container) {
        const root = createRoot(container);
        root.render(React.createElement(ProfileCardGrid));
      }
    </script>
  </body>
</html>
